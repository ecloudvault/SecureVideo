package com.oscgc.securevideo.server.mvc.controller;import javax.servlet.http.HttpServletRequest;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import org.springframework.web.bind.annotation.ResponseBody;import org.springframework.web.multipart.MultipartFile;import com.oscgc.securevideo.server.model.Tenant;import com.oscgc.securevideo.server.model.Video;import com.oscgc.securevideo.server.model.VideoKey;import com.oscgc.securevideo.server.multitenancy.TenancyContextProvider;import com.oscgc.securevideo.server.service.UploadVideoService;import com.oscgc.securevideo.server.service.VideoService;import com.oscgc.securevideo.server.service.impl.VideoServiceImpl;import com.oscgc.securevideo.server.tool.UuidGenerator;/** * Created by Yq on 2015/5/28. */@Controller@RequestMapping("/upload")public class UploadVideoController {        Logger logger = Logger.getLogger(UploadVideoController.class);        @Autowired    private UploadVideoService uploadVideoService;        @Autowired    private VideoService videoService;        @Autowired    private TenancyContextProvider tenancyContextProvider;        @RequestMapping("get")    public String getUploadView() {        return "/uploadvideo";    }        @RequestMapping("post")    @ResponseBody    public String uploadFileSave(HttpServletRequest request,                                 @RequestParam MultipartFile[] videofile) {                MultipartFile multipartFile = videofile[0];        String name = multipartFile.getOriginalFilename();                // not have format        if (name.indexOf(".") == -1 || !name.endsWith(".webm")) {                        return "{error:\"Unsupport format!Please select a .webm file!\",complete:false}";        }        // file formart        String ext = name.substring(name.indexOf("."), name.length());                Tenant tenant = (Tenant) tenancyContextProvider.getInstance()                                                       .currentTenancy();                Video video = new Video();        VideoKey videoKey = new VideoKey();        video.setId(new UuidGenerator().generateId());        video.setName(name);        video.setEncrypted(false);        video.setFormart(ext);        video.setOrgiFileName(video.getId());        videoKey.setId(new UuidGenerator().generateId());        video.setVideoKey(videoKey);        video.setTenantId(tenant.getId());                try {            uploadVideoService.saveFile(video, multipartFile.getBytes());                        String path = UploadVideoController.class.getClassLoader()                                                     .getResource("")                                                     .getPath() + "upload/";            String videoImgBasePath = request.getSession()                                             .getServletContext()                                             .getRealPath("/") + "static/img/screenshot/";            logger.debug(path + video.getOrgiFileName() + video.getFormart());                        uploadVideoService.screenShot(path    + video.getOrgiFileName()                                                  + video.getFormart(),                                          videoImgBasePath + video.getOrgiFileName()                                                  + ".jpg");            uploadVideoService.encryptVideo(video);                        VideoServiceImpl.getInstance().add(video);        }        catch (Exception e) {            e.printStackTrace();        }                return "{complete:true,videoId:\"" + video.getId() + "\"}";            }    }